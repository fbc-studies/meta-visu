/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/CategoryTimeline.js":
/*!*********************************!*\
  !*** ./src/CategoryTimeline.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass CategoryTimeline {\n  constructor(data, svgElement, config) {\n    this.config = {\n      width: config.width ? config.width : 400,\n      height: config.height ? config.height : 200,\n      posX: config.posX ? config.posX : 0,\n      posY: config.posY ? config.posY : 0,\n      scaleStartDate: config.scaleStartDate ? config.scaleStartDate : new Date('1970-01-01'),\n      scaleEndDate: config.scaleEndDate ? config.scaleEndDate : new Date(),\n      xAxisOrientation: config.xAxisOrientation ? config.xAxisOrientation : 'bottom',\n      showXAxis: config.showXAxis != null ? config.showXAxis : true,\n      showLegend: config.showLegend != null ? config.showLegend : true,\n    };\n    this.data = data;\n\n    this.xAxisPadding = 30;\n\n    this.svg = svgElement\n      .append('g')\n      .attr('class', 'timeline-chart')\n      .attr('width', this.config.width)\n      .attr('height', this.config.height + this.xAxisPadding)\n      .attr('transform', `translate(${this.config.posX}, ${this.config.posY})`);\n\n    this.x = d3\n      .scaleTime()\n      .domain([this.config.scaleStartDate, this.config.scaleEndDate])\n      .range([0, this.config.width - 25]);\n\n    this.y = d3\n      .scaleBand()\n      .domain(data.map(el => el.type))\n      .range([this.xAxisPadding, this.config.height])\n      .paddingInner(0.25)\n      .round(true);\n  }\n\n  static findEarliestStartDate(dataArr) {\n    return d3.min(dataArr, el => new Date(el.startDate));\n  }\n\n  static findLatestEndDate(dataArr) {\n    return d3.max(dataArr, el => new Date(el.endDate));\n  }\n\n  static createYearLabel(d) {\n    const startDate = new Date(d.startDate);\n    const endDate = new Date(d.endDate);\n    const startMonth = startDate.getMonth();\n    const endMonth = endDate.getMonth();\n    const startYear = startDate.getFullYear();\n    const endYear = endDate.getFullYear();\n\n    const startStr = startMonth === 0 ? startYear : `${startMonth + 1}/${startYear}`;\n    const endStr = endMonth === 11 ? endYear : `${endDate.getMonth() + 1}/${endYear}`;\n\n    if (startYear === endYear) {\n      if (startMonth === endMonth) {\n        return startStr;\n      } else if (startMonth === 0 && endMonth === 11) {\n        return startYear;\n      }\n    }\n\n    return `${startStr}â€”${endStr}`;\n  }\n\n  drawXAxis() {\n    let xAxis;\n    if (this.config.xAxisOrientation === 'top') {\n      xAxis = d3.axisTop(this.x);\n    } else {\n      xAxis = d3.axisBottom(this.x);\n    }\n\n    xAxis.ticks(d3.timeYear.every(10));\n\n    this.svg\n      .append('g')\n      .attr('class', 'timeline__axis')\n      .call(xAxis)\n      .attr('transform', () => {\n        if (this.config.xAxisOrientation === 'top') {\n          return 'translate(0, -2.5)';\n        }\n        return `translate(0, ${this.config.height - this.xAxisPadding + 2.5})`;\n      });\n  }\n\n  // FIXME: quite a clumsy way of doing this\n  drawLegend() {\n    const legend = this.svg.append('g').attr('class', 'legend');\n    legend.attr('transform', `translate(${this.config.width - 15}, 0)`);\n\n    const category1 = legend.append('g').attr('class', 'legend__category');\n\n    category1\n      .append('rect')\n      .attr('class', 'legend__color-1')\n      .attr('width', this.y.bandwidth() / 2)\n      .attr('height', this.y.bandwidth() / 2);\n\n    category1\n      .append('text')\n      .attr('class', 'legend__label')\n      .text('1987')\n      .attr('transform', `translate(${this.y.bandwidth() / 2 + 5}, ${this.y.bandwidth() / 2 - 5})`);\n\n    const category2 = legend.append('g').attr('class', 'legend__category');\n\n    category2\n      .append('rect')\n      .attr('class', 'legend__color-2')\n      .attr('width', this.y.bandwidth() / 2)\n      .attr('height', this.y.bandwidth() / 2)\n      .attr('transform', `translate(0, ${this.y.bandwidth() / 2})`);\n\n    category2\n      .append('text')\n      .attr('class', 'legend__label')\n      .text('1997')\n      .attr('transform', `translate(${this.y.bandwidth() / 2 + 5}, ${this.y.bandwidth() - 5})`);\n  }\n\n  calculateSectionWidth(sectionData) {\n    return this.x(new Date(sectionData.endDate)) - this.x(new Date(sectionData.startDate));\n  }\n\n  calculateSectionXPos(sectionData) {\n    return this.x(new Date(sectionData.startDate));\n  }\n\n  positionYearLabel(d) {\n    const xStart = this.x(new Date(d.startDate));\n    const xEnd = this.x(new Date(d.endDate));\n    const xCentre = (xStart + xEnd) / 2 - 2;\n\n    return `translate(${xCentre}, ${this.y.bandwidth() / 2 - 4})`;\n  }\n\n  moveTo(x, y) {\n    this.svg.attr('transform', `translate(${x}, ${y})`);\n  }\n\n  update() {\n    if (this.config.showXAxis) {\n      this.drawXAxis();\n    }\n\n    if (this.config.showLegend) {\n      this.drawLegend();\n    }\n    // enter\n    const categoryEnter = this.svg\n      .selectAll('.timeline')\n      .data(this.data)\n      .enter()\n      .append('g')\n      .attr('class', 'timeline');\n\n    categoryEnter.attr('transform', d => `translate(0, ${this.y(d.type) - this.xAxisPadding})`);\n\n    categoryEnter\n      .filter(d => d.type === 'parents')\n      .append('line')\n      .attr('class', 'timeline__separator')\n      .attr('x1', this.x(this.config.scaleStartDate) - 60)\n      .attr('y1', this.y.bandwidth() + 5)\n      .attr('x2', this.x(this.config.scaleEndDate))\n      .attr('y2', this.y.bandwidth() + 5);\n\n    categoryEnter\n      .append('text')\n      .attr('class', 'timeline__title')\n      .text(d => d.type)\n      .attr('dy', '1.5em')\n      .attr('dx', '-5em'); // FIXME: set text anchor correctly and change layout to position labels inside chart\n\n    const sectionEnter = categoryEnter\n      .selectAll('timeline__section')\n      .data(d => d.data)\n      .enter()\n      .append('g')\n      .attr('class', 'timeline__section');\n\n    // enter multiyear sections => rectangles\n    sectionEnter\n      .filter(d => new Date(d.startDate).getFullYear() !== new Date(d.endDate).getFullYear())\n      .append('rect')\n      .attr('class', 'timeline__rect')\n      .attr('x', d => this.calculateSectionXPos(d))\n      .attr('height', this.y.bandwidth() / 2)\n      .attr('width', d => this.calculateSectionWidth(d));\n\n    // enter 1 year sections => circles\n    sectionEnter\n      .filter(d => new Date(d.startDate).getFullYear() === new Date(d.endDate).getFullYear())\n      .append('circle')\n      .attr('r', this.y.bandwidth() / 4)\n      .attr('class', 'timeline__rect')\n      .attr('cx', d => this.calculateSectionXPos(d))\n      .attr('cy', 7.5);\n\n    // IDEA: if short timespans become a problem\n    // (ie. sections consisting of several small pieces leading to year labels overflowing),\n    // they could be combined before reaching this point\n    sectionEnter\n      .append('text')\n      .attr('class', 'timeline__year-label')\n      .text(d => this.constructor.createYearLabel(d))\n      .attr('text-anchor', 'middle')\n      .attr('transform', d => this.positionYearLabel(d));\n\n    sectionEnter\n      .filter(d => d.cohort === '1997')\n      .attr('transform', `translate(0, ${this.y.bandwidth() / 2})`)\n      .select('.timeline__rect')\n      .attr('class', 'timeline__rect timeline__rect--97');\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CategoryTimeline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/CategoryTimeline.js\n");

/***/ }),

/***/ "./src/TreeChart.js":
/*!**************************!*\
  !*** ./src/TreeChart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass TreeChart {\n  constructor(data, svgElement, config) {\n    this.config = {\n      width: config.width ? config.width : 400,\n      height: config.height ? config.height : 200,\n      posX: config.posX ? config.posX : 0,\n      posY: config.posY ? config.posY : 0,\n      childrenNames: config.childrenNames\n        ? config.childrenNames\n        : ['registerAdmins', 'registers', 'categories', 'samplings'],\n      nodeSize: config.nodeSize ? config.nodeSize : 10,\n      animationDuration: config.animationDuration ? config.animationDuration : 750,\n    };\n    const treeHeight = this.config.height;\n    const treeWidth = this.config.width;\n    const treeLayout = d3\n      .tree()\n      .size([treeHeight, treeWidth])\n      .separation(() => 1); // NOTE: this seems to spread all the leaf nodes equally far apart\n\n    const hierarchy = d3.hierarchy(data, d => this.findChildArr(d));\n\n    this.treeData = treeLayout(hierarchy);\n\n    this.svg = svgElement\n      .append('g')\n      .attr('class', 'tree')\n      .attr('width', this.config.width)\n      .attr('height', this.config.height)\n      .attr('transform', `translate(${this.config.posX}, ${this.config.posY})`)\n      .append('g');\n\n    this.sourceCoord = { x: treeHeight / 2, y: 0 };\n    this.idCounter = 0;\n  }\n\n  static diagonal(s, d) {\n    const path = `M ${s.y} ${s.x}\n                  C ${(s.y + d.y) / 2} ${s.x},\n                    ${(s.y + d.y) / 2} ${d.x},\n                    ${d.y} ${d.x}`;\n\n    return path;\n  }\n\n  static calculateLabelPlacement(d) {\n    try {\n      if (Math.ceil(d.x) > Math.ceil(d.parent.x)) {\n        d.labelPosition = 'under';\n      } else if (Math.ceil(d.x) < Math.ceil(d.parent.x)) {\n        d.labelPosition = 'top';\n      } else {\n        d.labelPosition = d.parent.labelPosition ? d.parent.labelPosition : 'top';\n      }\n    } finally {\n      switch (d.labelPosition) {\n        case 'top':\n          return '-1em';\n        case 'under':\n          return '1.5em';\n        default:\n          return '0em';\n      }\n    }\n  }\n\n  findChildArr(object) {\n    const childArrNames = this.config.childrenNames;\n    const childrenName = childArrNames.filter(name => object[name] !== undefined)[0];\n    if (childrenName !== undefined) {\n      return object[childrenName];\n    }\n    return null;\n  }\n\n  drawNodeCircles(nodeGroup) {\n    nodeGroup\n      .append('circle')\n      .attr('class', 'tree__node-marker')\n      .attr('r', this.config.nodeSize);\n  }\n  /* eslint-disable class-methods-use-this */\n  moveNodesInPlace(nodeGroup) {\n    nodeGroup.attr('transform', d => `translate(${d.y}, ${d.x})`);\n  }\n\n  addNodeLabels(nodeGroup) {\n    nodeGroup\n      .filter(d => d.parent)\n      .append('text')\n      .attr('class', 'tree__node-label')\n      .attr('dy', d => this.constructor.calculateLabelPlacement(d))\n      .attr('x', -25)\n      .attr('text-anchor', 'middle')\n      // NOTE: limit the length of node labels (the difference between lengths in test)\n      // and slice is to prevent the \"...\" being lengthier than removed chars.\n      .text(d => (d.data.name.length <= 43 ? d.data.name : `${d.data.name.slice(0, 40)}...`))\n      .on('mouseover', (d, i, nodes) => this.showFullLabel(d, i, nodes))\n      .on('mouseout', (d, i, nodes) => this.showNormalLabel(d, i, nodes));\n\n    // NOTE: handle root node separately to support text wrapping\n    this.addRootLabel(nodeGroup.filter(d => !d.parent));\n  }\n\n  showFullLabel(dataNode, i, nodes) {\n    d3.select(nodes[i]).text(d => d.data.name);\n  }\n\n  showNormalLabel(data, i, nodes) {\n    d3.select(nodes[i]).text(d => (d.data.name.length <= 43 ? d.data.name : `${d.data.name.slice(0, 40)}...`));\n  }\n\n  addRootLabel(rootNode) {\n    const fo = rootNode.append('foreignObject').attr('class', 'tree__html-object');\n\n    const rootLabel = fo\n      .append('xhtml:p')\n      .attr('class', 'tree__html-label')\n      .html(d => d.data.name);\n\n    const boundingRect = rootLabel.node().getBoundingClientRect();\n    fo.attr('transform', `translate(${-1 * boundingRect.width}, ${boundingRect.height / -2})`);\n  }\n  /* eslint-enable class-methods-use-this */\n\n  updateNodes() {\n    const nodesData = this.treeData.descendants();\n    const nodeSelection = this.svg.selectAll('.node').data(nodesData, (d) => {\n      const id = d.id ? d.id : this.idCounter;\n      d.id = id;\n      this.idCounter += 1;\n      return id;\n    });\n\n    // enter\n    const nodeEnter = nodeSelection\n      .enter()\n      // .filter(d => d.depth > 0)\n      .append('g')\n      .attr('class', 'tree__node')\n      .attr('transform', () => `translate(${this.sourceCoord.y}, ${this.sourceCoord.x})`);\n    // .on('click', (d) => {\n    //   this.clickNode(d);\n    // });\n\n    // this.drawNodeCircles(nodeEnter.merge(nodeSelection));\n    this.moveNodesInPlace(nodeEnter);\n    this.addNodeLabels(nodeEnter);\n\n    // exit\n    nodeSelection\n      .exit()\n      // .transition()\n      // .duration(this.config.animationDuration)\n      .attr('transform', `translate(${this.sourceCoord.y}, ${this.sourceCoord.x})`)\n      .remove();\n  }\n\n  updateLinks() {\n    const linksData = this.treeData.descendants().slice(1);\n    const linkSelection = this.svg.selectAll('path.link').data(linksData, (d) => {\n      const id = d.id ? d.id : this.idCounter;\n      d.id = id;\n      this.idCounter += 1;\n      return id;\n    });\n\n    // enter\n    const linkEnter = linkSelection\n      .enter()\n      // .filter(d => d.depth > 1) // don't draw links to root element\n      .insert('path', 'g')\n      .attr('class', 'tree__link')\n      .attr('d', () => {\n        const o = { x: this.sourceCoord.x, y: this.sourceCoord.y };\n        return this.constructor.diagonal(o, o);\n      });\n\n    linkEnter\n      // .transition()\n      // .duration(this.config.duration)\n      .attr('d', d => this.constructor.diagonal(d, d.parent));\n\n    // exit\n    linkSelection\n      .exit()\n      .transition()\n      .duration(750)\n      .attr('d', () => {\n        const o = { y: this.sourceCoord.y, x: this.sourceCoord.x };\n        return this.constructor.diagonal(o, o);\n      })\n      .remove();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TreeChart);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/TreeChart.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _TreeChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TreeChart */ \"./src/TreeChart.js\");\n/* harmony import */ var _CategoryTimeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CategoryTimeline */ \"./src/CategoryTimeline.js\");\n\n\n\nasync function getData(file) {\n  return fetch(file)\n    .then(res => res.json())\n    .then(dataJson => dataJson);\n}\n\nfunction calculateCategoryCount(data) {\n  let categoryCount = 0;\n  data.registers.forEach(register => register.categories.forEach(category => (categoryCount += 1)));\n  return categoryCount;\n}\n\nfunction categoryTimelineHelper(samplingData, svg, config) {\n  let timelineData = samplingData;\n  const parentsData = timelineData.filter(el => el.parents);\n  const subjectsData = timelineData.filter(el => !el.parents);\n  timelineData = [\n    {\n      type: 'parents',\n      data: parentsData,\n    },\n    {\n      type: 'subjects',\n      data: subjectsData,\n    },\n  ];\n  return new _CategoryTimeline__WEBPACK_IMPORTED_MODULE_1__[\"default\"](timelineData, svg, config);\n}\n\nfunction compareByName(a, b) {\n  if (a.name < b.name) {\n    return -1;\n  } else if (a.name > b.name) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction sortTreeData(data) {\n  data.registers.sort((a, b) => compareByName(a, b));\n  data.registers.forEach(register => register.categories.sort((a, b) => compareByName(a, b)));\n  return data;\n}\n\nasync function drawTimelineTree(\n  filename,\n  filteredRegisters = [],\n  treeConfigMod = {},\n  timelineConfigMod = {},\n) {\n  let data = await getData(`data/${filename}`);\n  const filteredRegisterData = data.registers.filter(register => !filteredRegisters.includes(register.name));\n  data.registers = filteredRegisterData;\n  data = sortTreeData(data);\n  const categoryCount = calculateCategoryCount(data);\n  const treeHeight = categoryCount * 100;\n  // ***** TreeChart *****\n\n  const treeConfig = {\n    width: 450,\n    height: treeHeight,\n    posX: 125,\n    posY: 50,\n    childrenNames: ['registers', 'categories'],\n    animationDuration: 750,\n    nodeSize: 7.5,\n  };\n\n  const svg = d3\n    .select(`main.chart-area>div[data-filename=\"${filename}\"]`)\n    .append('svg')\n    .attr('data-filename', filename)\n    .attr('height', treeHeight + 100)\n    .attr('width', 1050)\n    .attr('class', 'timeline-tree js-timeline-tree');\n\n  const treeChart = new _TreeChart__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data, svg, treeConfig);\n  treeChart.updateNodes();\n  treeChart.updateLinks();\n\n  // ***** Timelines *****\n  console.log(timelineConfigMod.scaleEndDate);\n  const timelineConfig = {\n    width: 250,\n    height: 100,\n    showXAxis: false,\n    showLegend: false,\n    scaleStartDate: timelineConfigMod.scaleStartDate\n      ? timelineConfigMod.scaleStartDate\n      : new Date('1950-01-01'),\n    scaleEndDate: timelineConfigMod.scaleEndDate ? timelineConfigMod.scaleEndDate : new Date(),\n  };\n  treeChart.treeData.children.forEach((registerNode, registerIdx) => {\n    registerNode.children.forEach((categoryNode, categoryIdx) => {\n      let timelineConfigExt = timelineConfig;\n      if (\n        registerIdx === treeChart.treeData.children.length - 1 &&\n        categoryIdx === registerNode.children.length - 1\n      ) {\n        timelineConfigExt = { ...timelineConfig, showXAxis: true, showLegend: true };\n      }\n      const categoryTimeline = categoryTimelineHelper(\n        categoryNode.data.samplings,\n        svg,\n        timelineConfigExt,\n      );\n      // NOTE: the tree structure kind of swaps x and y coords\n      categoryTimeline.moveTo(categoryNode.y + 300, categoryNode.x + 12.5);\n      categoryTimeline.update();\n    });\n  });\n}\n\nfunction removeTimelineTree(filename) {\n  const elToRemove = document.querySelector(`.js-timeline-tree[data-filename=\"${filename}\"]`);\n  if (elToRemove) {\n    elToRemove.remove();\n  }\n}\n\nfunction activateSidebar() {\n  document.querySelectorAll('.js-register-btn').forEach((el) => {\n    el.addEventListener('click', () => {\n      const { filename } = el.dataset;\n      if (![...el.classList].includes('btn--selected')) {\n        el.classList.add('btn--selected');\n        drawTimelineTree(filename);\n        showRegisterSelector(el.parentElement, filename);\n      } else {\n        removeTimelineTree(filename);\n        hideRegisterSelector(el.parentElement);\n        el.classList.remove('btn--selected');\n      }\n    });\n  });\n}\n\nfunction activateRegisterSelector(selectorEl) {\n  const { filename } = selectorEl.dataset;\n\n  selectorEl.querySelectorAll('.js-register-select').forEach((checkboxEl) => {\n    checkboxEl.addEventListener('change', () => {\n      const filterList = getFilterList(filename);\n      removeTimelineTree(filename);\n      drawTimelineTree(filename, filterList);\n    });\n  });\n}\n\nfunction activateYearSelectControls(filename) {\n  const timelineTree = document.querySelector(`.js-timeline-tree-card[data-filename=\"${filename}\"]`);\n  const setYearsBtn = timelineTree.querySelector('.js-set-years-btn');\n  setYearsBtn.addEventListener('click', () => {\n    let startYear = parseInt(timelineTree.querySelector('.js-start-year').value, 10);\n    startYear = !isNaN(startYear) ? startYear : 1950;\n    let endYear = parseInt(timelineTree.querySelector('.js-end-year').value, 10);\n    endYear = !isNaN(endYear) && endYear > startYear ? endYear : new Date().getFullYear();\n\n    startYear = `${startYear}-01-01`;\n    endYear = `${endYear}-12-31`;\n    console.log(endYear);\n    const timelineConfigMod = {\n      scaleStartDate: new Date(startYear),\n      scaleEndDate: new Date(endYear),\n    };\n    const filteredRegisters = getFilterList(filename);\n    removeTimelineTree(filename);\n    drawTimelineTree(filename, filteredRegisters, {}, timelineConfigMod);\n  });\n}\n\nfunction getFilterList(filename) {\n  const selectorEl = document.querySelector(`.js-register-list[data-filename=\"${filename}\"]`);\n  const filterList = [...selectorEl.querySelectorAll('.js-register-select')]\n    .filter(checkbox => !checkbox.checked)\n    .map(checkbox => checkbox.dataset.identifier.split('/')[1]);\n\n  return filterList;\n}\n\nfunction createSidebar(filenames) {\n  filenames\n    .map(name => name.split('.')[0])\n    .sort()\n    .forEach((name) => {\n      const navItem = document.createElement('li');\n      navItem.classList.add('nav__item');\n      navItem.innerHTML = `<button class=\"btn js-register-btn\" data-filename=\"${name}.json\">${name}</button>`;\n      document.querySelector('.js-nav-list').appendChild(navItem);\n    });\n}\n\nasync function createRegisterSelector(navItem, filename) {\n  let data = await getData(`data/${filename}`);\n  data = sortTreeData(data);\n  const registerList = document.createElement('ul');\n  registerList.classList.add('register-selector', 'js-register-list');\n  registerList.dataset.filename = filename;\n  data.registers.forEach((register) => {\n    const identifier = `${filename}/${register.name}`;\n    const listItem = document.createElement('li');\n    listItem.classList.add('register__item');\n    listItem.innerHTML = `<input class=\"js-register-select\" type=\"checkbox\" id=\"${identifier}\" \n    data-identifier=\"${identifier}\" checked/>\n    <label for=\"${identifier}\">${register.name}</label>`;\n    registerList.appendChild(listItem);\n  });\n  navItem.appendChild(registerList);\n  activateRegisterSelector(registerList);\n}\n\nfunction createYearSelector(startYear, endYear, optionText = '--year--') {\n  const select = document.createElement('select');\n  select.classList.add('year-selector');\n  const firstOption = document.createElement('option');\n  firstOption.value = '';\n  firstOption.textContent = optionText;\n  select.appendChild(firstOption);\n  for (let year = startYear; year <= endYear; year += 1) {\n    const option = document.createElement('option');\n    option.value = year;\n    option.textContent = year;\n    select.appendChild(option);\n  }\n\n  return select;\n}\n\nfunction createTimelineTreeCards(filenames) {\n  filenames.forEach((filename) => {\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('timeline-tree-wrapper', 'card', 'js-timeline-tree-card');\n    placeholder.dataset.filename = filename;\n    const cardHeader = document.createElement('div');\n    cardHeader.classList.add('card__header');\n    cardHeader.innerHTML = `\n    <h2 class=\"title card__title\">${filename.slice(0, -5)}</h2>\n    <div class=\"year-control card__year-control js-year-control\">\n      <label class=\"year-form__label\">Timeline years: </label>\n    </div>`;\n    const startYearSelector = createYearSelector(1900, new Date().getFullYear(), '--start year--');\n    startYearSelector.classList.add('js-start-year');\n    const endYearSelector = createYearSelector(1900, new Date().getFullYear(), '--end year--');\n    endYearSelector.classList.add('js-end-year');\n    const setYearsBtn = document.createElement('button');\n    setYearsBtn.classList.add('js-set-years-btn');\n    setYearsBtn.dataset.filename = filename;\n    setYearsBtn.textContent = 'Set';\n    const yearForm = cardHeader.querySelector('.js-year-control');\n    yearForm.appendChild(startYearSelector);\n    yearForm.appendChild(document.createTextNode(' â€” '));\n    yearForm.appendChild(endYearSelector);\n    yearForm.appendChild(setYearsBtn);\n\n    placeholder.appendChild(cardHeader);\n    document.querySelector('main.chart-area').appendChild(placeholder);\n    activateYearSelectControls(filename);\n  });\n}\n\nasync function showRegisterSelector(navItem, filename) {\n  const registerSelector = navItem.querySelector('.register-selector');\n  if (registerSelector === null) {\n    createRegisterSelector(navItem, filename);\n  } else {\n    registerSelector.classList.remove('vanish');\n  }\n}\n\nfunction hideRegisterSelector(navItem) {\n  navItem.querySelector('.register-selector').classList.add('vanish');\n}\n\nasync function main() {\n  const filenames = await getData('data/filenames.json');\n  filenames.sort();\n  createTimelineTreeCards(filenames);\n  createSidebar(filenames);\n  activateSidebar();\n\n  const toggleBtn = document.querySelector('.js-toggle-menu');\n  toggleBtn.addEventListener('click', () => {\n    document.querySelector('.js-nav-card').classList.toggle('nav--closed');\n    toggleBtn.classList.toggle('nav__toggle-btn--rotate');\n  });\n\n  document\n    .querySelector('.js-register-btn[data-filename=\"National Institute for Health and Welfare.json\"]')\n    .click();\n}\n\nmain();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/index.js */"./src/index.js");


/***/ })

/******/ });